[{"D:\\web-projects\\marvel-showcase\\src\\index.js":"1","D:\\web-projects\\marvel-showcase\\src\\App.js":"2","D:\\web-projects\\marvel-showcase\\src\\components\\CharacterCard.js":"3","D:\\web-projects\\marvel-showcase\\src\\pages\\Home.js":"4","D:\\web-projects\\marvel-showcase\\src\\context\\store.js":"5","D:\\web-projects\\marvel-showcase\\src\\context\\reducer.js":"6","D:\\web-projects\\marvel-showcase\\src\\hooks\\usePageBottom.js":"7","D:\\web-projects\\marvel-showcase\\src\\pages\\CharacterDetails.js":"8","D:\\web-projects\\marvel-showcase\\src\\components\\HomeButton.js":"9","D:\\web-projects\\marvel-showcase\\src\\pages\\NotFound.js":"10","D:\\web-projects\\marvel-showcase\\src\\components\\Comics.js":"11"},{"size":199,"mtime":1607615526091,"results":"12","hashOfConfig":"13"},{"size":646,"mtime":1607709765260,"results":"14","hashOfConfig":"13"},{"size":345,"mtime":1607711193171,"results":"15","hashOfConfig":"13"},{"size":2452,"mtime":1607688231950,"results":"16","hashOfConfig":"13"},{"size":455,"mtime":1607688110918,"results":"17","hashOfConfig":"13"},{"size":597,"mtime":1607688123565,"results":"18","hashOfConfig":"13"},{"size":672,"mtime":1607678206454,"results":"19","hashOfConfig":"13"},{"size":1310,"mtime":1607696493791,"results":"20","hashOfConfig":"13"},{"size":701,"mtime":1607709793586,"results":"21","hashOfConfig":"13"},{"size":360,"mtime":1607699674536,"results":"22","hashOfConfig":"13"},{"size":1662,"mtime":1607700149061,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"odsu53",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},"D:\\web-projects\\marvel-showcase\\src\\index.js",[],["50","51"],"D:\\web-projects\\marvel-showcase\\src\\App.js",[],"D:\\web-projects\\marvel-showcase\\src\\components\\CharacterCard.js",[],"D:\\web-projects\\marvel-showcase\\src\\pages\\Home.js",["52","53","54"],"import React, { useEffect, useContext } from \"react\";\r\nimport { Context } from \"../context/store\";\r\nimport CharacterCard from \"../components/CharacterCard\";\r\nimport usePageBottom from \"../hooks/usePageBottom\";\r\n\r\nconst Home = () => {\r\n  const API_KEY = process.env.REACT_APP_MARVEL_API_KEY;\r\n  const [{ offset, characters, maxOffset }, dispatch] = useContext(Context);\r\n  const isPageBottom = usePageBottom();\r\n  //const [characters, setCharacters] = useState([]);\r\n\r\n  const fetchCharacters = async () => {\r\n    const response = await fetch(\r\n      `https://gateway.marvel.com:443/v1/public/characters?offset=${\r\n        (offset - 1) * 30\r\n      }&limit=30&apikey=${API_KEY}`\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = `An error has occured: ${response.status}`;\r\n      throw new Error(message);\r\n    }\r\n\r\n    const json = await response.json();\r\n\r\n    if (!maxOffset) {\r\n      dispatch({type: \"SET_MAX_OFFSET\", payload: Math.ceil(json.data.total / 30)})\r\n    }\r\n\r\n    dispatch({ type: \"GET_CHARACTERS\", payload: json.data.results });\r\n  };\r\n\r\n  // using the pageBottom hook to change offset and get more content\r\n  useEffect(() => {\r\n    if (isPageBottom) {\r\n      console.log(offset + 1);\r\n      dispatch({ type: \"SET_OFFSET\", payload: offset + 1 });\r\n    }\r\n  }, [isPageBottom]);\r\n\r\n  // check if we are at the bottom of the page and the offset changed so we load more characters\r\n  // basically a fetchMore function\r\n  useEffect(() => {\r\n    if (isPageBottom) {\r\n      fetchCharacters();\r\n    }\r\n  }, [offset]);\r\n\r\n  // if there are no characters loaded we want to fetch the initial characters\r\n  useEffect(() => {\r\n    if (!characters || !characters.length) {\r\n      fetchCharacters();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"main-div\">\r\n      <h1 style={{ textAlign: \"center\" }}>Marvel Characters</h1>\r\n      <div className=\"wrapper\">\r\n        {characters.length === 0 ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n          characters.map((character) => (\r\n            <CharacterCard\r\n              key={character.id}\r\n              id={character.id}\r\n              name={character.name}\r\n              imgSrc={`${character.thumbnail.path}.${character.thumbnail.extension}`}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n      <footer style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n        \"Data provided by Marvel. Â© 2014 Marvel\"\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\web-projects\\marvel-showcase\\src\\context\\store.js",[],"D:\\web-projects\\marvel-showcase\\src\\context\\reducer.js",[],"D:\\web-projects\\marvel-showcase\\src\\hooks\\usePageBottom.js",[],"D:\\web-projects\\marvel-showcase\\src\\pages\\CharacterDetails.js",["55"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Context } from \"../context/store\";\r\nimport HomeButton from \"../components/HomeButton\";\r\nimport Comics from \"../components/Comics\";\r\n\r\nconst CharacterDetails = () => {\r\n  const [character, setCharacter] = useState(null);\r\n  const { characterID } = useParams();\r\n  const [{ characters }] = useContext(Context);\r\n\r\n  useEffect(() => {\r\n    const filtered = characters.filter(\r\n      (character) => character.id === parseInt(characterID)\r\n    );\r\n    const character = filtered[0];\r\n\r\n    setCharacter(character);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"main-div\">\r\n      <HomeButton character={character} />\r\n      {!character ? (\r\n        <p className=\"error-message\">\r\n          There is no info for this Marvel Character\r\n        </p>\r\n      ) : (\r\n        <div className=\"hero-details\">\r\n          <h2>{character.name}</h2>\r\n          <img\r\n            src={`${character.thumbnail.path}.${character.thumbnail.extension}`}\r\n            alt={character.name}\r\n            className=\"hero-image\"\r\n          />\r\n          <p>{character.description}</p>\r\n          <Comics characterID={character.id} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterDetails;\r\n","D:\\web-projects\\marvel-showcase\\src\\components\\HomeButton.js",[],"D:\\web-projects\\marvel-showcase\\src\\pages\\NotFound.js",[],"D:\\web-projects\\marvel-showcase\\src\\components\\Comics.js",["56"],"import React, { useState, useEffect } from \"react\";\r\n\r\n// previously I used a regex to match the comics from the info we already had but this is less error prone\r\nconst Comics = ({ characterID }) => {\r\n  const API_KEY = process.env.REACT_APP_MARVEL_API_KEY;\r\n  const [comics, setComics] = useState(null);\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [errorMsg, setErrorMsg] = useState(null);\r\n\r\n  const fetchComics = async () => {\r\n    try {\r\n      const startDate = \"2015-01-01\";\r\n      const today = new Date().toISOString().split(\"T\", 1)[0];\r\n      const dateToSend = `${startDate}%2C${today}`;\r\n      const url = `https://gateway.marvel.com:443/v1/public/characters/${characterID}/comics?format=comic&formatType=comic&dateRange=${dateToSend}&orderBy=-onsaleDate&apikey=${API_KEY}`;\r\n      const response = await fetch(url);\r\n\r\n      if (!response.ok) {\r\n        const message = `An error has occured: ${response.status}`;\r\n        throw new Error(message);\r\n      }\r\n\r\n      const json = await response.json();\r\n\r\n      const comics = json.data.results.map((comic) => comic.title);\r\n      setComics(comics.slice(0, 10));\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.log(err)\r\n      setErrorMsg(\"There was a problem with the service.\")\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchComics();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {errorMsg && <p>{errorMsg}</p>}\r\n      {isLoading ? (\r\n        <p>Loading Comics</p>\r\n      ) : comics.length === 0 ? (\r\n        <p>No comics to show</p>\r\n      ) : (\r\n        comics.map((comic, idx) => <div key={idx}>{comic}</div>)\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comics;\r\n",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":39,"column":6,"nodeType":"63","endLine":39,"endColumn":20,"suggestions":"64"},{"ruleId":"61","severity":1,"message":"65","line":47,"column":6,"nodeType":"63","endLine":47,"endColumn":14,"suggestions":"66"},{"ruleId":"61","severity":1,"message":"67","line":54,"column":6,"nodeType":"63","endLine":54,"endColumn":8,"suggestions":"68"},{"ruleId":"61","severity":1,"message":"69","line":19,"column":6,"nodeType":"63","endLine":19,"endColumn":8,"suggestions":"70"},{"ruleId":"61","severity":1,"message":"71","line":36,"column":6,"nodeType":"63","endLine":36,"endColumn":8,"suggestions":"72"},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'offset'. Either include them or remove the dependency array.","ArrayExpression",["75"],"React Hook useEffect has missing dependencies: 'fetchCharacters' and 'isPageBottom'. Either include them or remove the dependency array.",["76"],"React Hook useEffect has missing dependencies: 'characters' and 'fetchCharacters'. Either include them or remove the dependency array.",["77"],"React Hook useEffect has missing dependencies: 'characterID' and 'characters'. Either include them or remove the dependency array.",["78"],"React Hook useEffect has a missing dependency: 'fetchComics'. Either include it or remove the dependency array.",["79"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [dispatch, isPageBottom, offset]",{"range":"90","text":"91"},"Update the dependencies array to be: [fetchCharacters, isPageBottom, offset]",{"range":"92","text":"93"},"Update the dependencies array to be: [characters, fetchCharacters]",{"range":"94","text":"95"},"Update the dependencies array to be: [characterID, characters]",{"range":"96","text":"97"},"Update the dependencies array to be: [fetchComics]",{"range":"98","text":"99"},[1282,1296],"[dispatch, isPageBottom, offset]",[1521,1529],"[fetchCharacters, isPageBottom, offset]",[1720,1722],"[characters, fetchCharacters]",[637,639],"[characterID, characters]",[1333,1335],"[fetchComics]"]